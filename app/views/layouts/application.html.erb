<!DOCTYPE html>
<html>
  <head>
    <title>Cotalo</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    
    <%# Load Bootstrap from CDN %>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <%# Load application JavaScript %>
    <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
    
    <%# Load page-specific scripts %>
    <%= yield :scripts %>
  </head>

  <body>
    <%= yield :styles %>
    
    <%= render 'shared/navbar' %>
    
    <main class="main-content">
      <div class="container-fluid py-4">
        <% if notice %>
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= notice %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% end %>
        
        <% if alert %>
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <%= alert %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% end %>
        
        <%= yield %>
      </div>
    </main>

    <%= render 'shared/footer' %>

    <!-- Simple dropdown fix -->
    <style>
      /* Force display for dropdown menus when they have the show class */
      .dropdown-menu.show {
        display: block !important;
        opacity: 1 !important;
        visibility: visible !important;
        position: absolute !important;
        z-index: 1050 !important;
        transform: none !important;
        top: 100% !important;
        left: 0 !important;
      }

      /* Custom tooltip styles */
      .tooltip {
        font-size: 12px !important;
      }
      
      .tooltip-inner {
        padding: 4px 8px !important;
        color: var(--cotalo-green) !important;
        background-color: rgba(33, 37, 41, 0.95) !important;
        border: 1px solid var(--cotalo-green) !important;
      }

      .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before, 
      .bs-tooltip-bottom .tooltip-arrow::before {
        border-bottom-color: var(--cotalo-green) !important;
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Very direct approach for the catalogs dropdown
        const catalogsDropdown = document.getElementById('catalogsDropdown');
        const userDropdown = document.getElementById('navbarDropdown');
        
        // Direct click handler for Catalogs dropdown
        if (catalogsDropdown) {
          catalogsDropdown.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('Cat√°logos clicked');
            
            // Find the dropdown menu and toggle it directly
            const dropdownMenu = this.nextElementSibling;
            dropdownMenu.classList.toggle('show');
          });
        }
        
        // Direct click handler for User dropdown
        if (userDropdown) {
          userDropdown.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('User dropdown clicked');
            
            // Find the dropdown menu and toggle it directly
            const dropdownMenu = this.nextElementSibling;
            dropdownMenu.classList.toggle('show');
          });
        }
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
          if (!e.target.closest('.dropdown')) {
            document.querySelectorAll('.dropdown-menu.show').forEach(function(menu) {
              menu.classList.remove('show');
            });
          }
        });
      });
    </script>

    <%# Initialize Bootstrap components %>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        initializeTooltips();
      });

      document.addEventListener("turbo:load", function() {
        initializeTooltips();
      });

      function initializeTooltips() {
        // Check if bootstrap is available
        
        // Initialize all tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        
        tooltipTriggerList.forEach(function(tooltipTriggerEl) {
          try {
            new bootstrap.Tooltip(tooltipTriggerEl, {
              placement: 'bottom',
              popperConfig: {
                modifiers: [
                  {
                    name: 'offset',
                    options: {
                      offset: [20, 0],
                    },
                  },
                ],
              }
            });
          } catch (error) {
            console.error("Error initializing tooltip:", error);
          }
        });
      }

      // Cleanup tooltips before Turbo cache
      document.addEventListener("turbo:before-cache", function() {
        var tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        tooltips.forEach(function(element) {
          var tooltip = bootstrap.Tooltip.getInstance(element);
          if (tooltip) {
            tooltip.dispose();
          }
        });
      });
    </script>
  </body>
</html>
