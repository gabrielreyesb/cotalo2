// --- Start :has() Scoped Layout for Product Form ---

// When .product-form-container is present within main.main-content:
main.main-content:has(.product-form-container) {
  // Ensure it acts as a flex container but doesn't scroll itself
  flex: 1 1 auto;
  overflow: hidden; // Prevent main from scrolling
  padding: 0; // Remove default padding, apply to inner container
  height: 0; // Needed for flex child height calculation
  
  // The immediate child .container-fluid should handle scrolling
  > .container-fluid {
    height: 100%; // Fill the main-content height
    overflow-y: auto; // Make this container scroll
    overflow-x: hidden;
    padding: 1.5rem; // Re-apply padding here
  }
}

.product-form-container {
  
  // Form Control Styling (Scoped)
  .form-control,
  .form-select {
    background-color: var(--bg-primary);
    border-color: var(--border-color);
    color: var(--text-primary);

    &:focus {
      border-color: var(--cotalo-green);
      box-shadow: 0 0 0 0.25rem rgba(var(--cotalo-green-rgb), 0.25); // Use RGB version for alpha
      background-color: var(--bg-primary); // Ensure background doesn't change on focus
      color: var(--text-primary); // Ensure text color doesn't change on focus
    }

    // Placeholder text color
    &::placeholder {
      color: var(--text-secondary);
      opacity: 0.7; // Make it slightly less prominent
    }

    // Handle disabled state
    &:disabled,
    &[readonly] {
      background-color: var(--bs-secondary-bg); // Use Bootstrap's variable for disabled bg
      opacity: 0.7;
      cursor: not-allowed;
    }
  }

  // Style labels
  .form-label {
    color: var(--text-secondary);
    margin-bottom: 0.5rem; 
  }

  // Tab Layout Adjustments (Flexbox for vertical spacing)
  // Target the root element of each tab component Vue renders
  .general-tab,
  .materials-tab,
  .processes-tab, // Assuming these classes exist
  .extras-tab,    // Assuming these classes exist
  .pricing-tab {   // Assuming these classes exist
    display: flex;         
    flex-direction: column;
    gap: 1.5rem; // Creates space between elements inside the tab (like the green panel and tables/forms)
    margin-bottom: 1.5rem; // Add space *below* each tab section 
  }
}

@media (max-width: 600px) {
  .pricing-tab .table td .d-flex {
    flex-direction: row !important;
    align-items: center !important;
    justify-content: space-between !important;
    gap: 0.5rem !important;
    width: 100%;
    overflow: hidden;
  }
  .pricing-tab .table td .percentage-group {
    margin-right: 0.5rem !important;
    text-align: left !important;
    flex-shrink: 1;
    min-width: 0;
  }
  .pricing-tab .table td .percentage-group .input-group {
    display: flex !important;
    flex-direction: row !important;
    flex-wrap: nowrap !important;
    width: auto !important;
    min-width: 0 !important;
  }
  .pricing-tab .table td .percentage-group input[type="number"] {
    max-width: 40px;
    min-width: 0;
    text-align: right;
    padding-right: 0.25rem;
  }
  .pricing-tab .table td .calculated-value {
    width: auto !important;
    min-width: 60px;
    text-align: right !important;
    white-space: nowrap;
    flex-grow: 1;
    flex-shrink: 0;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

/* PricingTab table row separators and spacing */
.subtotal-row th, .subtotal-row td,
.subtotal-with-waste-row th, .subtotal-with-waste-row td,
.price-before-margin-row th, .price-before-margin-row td {
  border-top: 2px solid #42b983;
  font-weight: 600;
}
.total-row th, .total-row td {
  border-top: 2px solid var(--cotalo-green, #42b983);
  font-weight: 700;
  font-size: 1rem;
}
.final-price-row th, .final-price-row td {
  font-weight: 700;
  color: #42b983;
  font-size: 1rem;
}
.percentage-group {
  width: 140px;
  margin-right: 10px;
}
.calculated-value {
  width: 120px;
  text-align: right;
  white-space: nowrap;
}
.waste-input, .margin-input {
  width: 50px !important;
  min-width: 50px;
  max-width: 60px;
  text-align: right;
} 