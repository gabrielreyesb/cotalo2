/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

// Import custom Bootstrap configuration
@import "bootstrap_custom";

// Import base styles
@import "base/layout";

// Import theme
@import "dark_theme";

// Import components
@import "components/vue";
@import "components/navbar";
@import "components/subnavbar";

// Import shared styles
@import "shared";

// Additional global styles
body {
  font-family: 'Roboto', sans-serif;
  line-height: 1.5;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  overflow-x: hidden;
  overflow-y: auto;
}

// Dark scrollbar styling
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: #1a1a1a;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: #3a3a3a;
  border-radius: 4px;
  
  &:hover {
    background: #4a4a4a;
  }
}

// Firefox scrollbar styling
* {
  scrollbar-width: thin;
  scrollbar-color: #3a3a3a #1a1a1a;
}

html {
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

// Container adjustments for dark theme
.container, .container-fluid {
  padding-top: 1rem;
  padding-bottom: 1rem;
  height: auto;
  overflow: visible;
  position: static;
}

// Link styling for dark theme
a {
  color: var(--cotalo-green);
  text-decoration: none;
  
  &:hover {
    color: var(--cotalo-green-dark);
    text-decoration: underline;
  }
}

// Application-specific styles
.main-content {
  flex: 1 1 auto;
  padding: 1.5rem 0;
  display: flex;
  flex-direction: column;
  height: auto;
  overflow: visible;
}

.footer {
  position: relative;
  width: 100%;
  background-color: var(--nav-bg);
  border-top: 1px solid var(--border-color);
  padding: 1rem 0;
  color: var(--text-secondary);
  margin-top: auto;
}

// Hide debugging containers
[style*="border: 3px solid red"],
div:empty,
.empty-container,
div:has(> .debug) {
  display: none !important;
}

// Ensure Kaminari pagination is always horizontal and styled
.pagination {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  list-style: none;
  padding-left: 0;
  margin-bottom: 0.5rem;
  margin-top: 0;
}
.pagination li {
  display: inline-block;
  margin: 0 4px;
}

/* Ensure that the container (or parent) of pagination is not centered, so that the pagination is left-justified */
.container-fluid .pagination, .container .pagination {
  text-align: left;
}

/* Make the active pagination item larger and more rounded (moderate size) */
.pagination .active .page-link {
  background-color: var(--cotalo-green, #28a745) !important;
  color: #fff !important;
  padding: 0.25rem 0.55rem !important;
  font-size: 1rem !important;
  border-radius: 0.375rem !important;
  min-width: 1.25rem;
  min-height: 1.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(40,167,69,0.10);
}
